{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Code_WDP301\\\\Learning-Management-System\\\\frontend\\\\src\\\\components\\\\Student\\\\QuizList.jsx\",\n  _s = $RefreshSig$();\n// src/components/QuizList.jsx\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { motion } from \"framer-motion\";\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { Container, Card, Button, Spinner, Form, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizList() {\n  _s();\n  var _submission$grade;\n  const navigate = useNavigate();\n  const {\n    assignmentId\n  } = useParams(); // Route: /student/quiz/:assignmentId\n\n  // 1. State\n  const [assignment, setAssignment] = useState(null);\n  const [submission, setSubmission] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [answers, setAnswers] = useState({}); // { questionId: selectedOption }\n  const [essayContent, setEssayContent] = useState(\"\");\n  const [canEdit, setCanEdit] = useState(false); // còn hạn nộp\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n\n  // Lấy studentId từ localStorage hoặc mặc định\n  const DEFAULT_STUDENT_ID = \"60a000000000000000000002\";\n  const [studentId, setStudentId] = useState(DEFAULT_STUDENT_ID);\n  useEffect(() => {\n    try {\n      const stored = localStorage.getItem(\"user\");\n      if (stored) {\n        const u = JSON.parse(stored);\n        if (u && u._id) setStudentId(u._id);\n      }\n    } catch (e) {\n      console.warn(\"localStorage user parse error:\", e);\n    }\n  }, []);\n\n  //  Fetch assignment detail\n  const fetchAssignment = useCallback(async () => {\n    try {\n      const resp = await axios.get(`/api/student/assignments/${assignmentId}`);\n      if (resp.data.success) {\n        setAssignment(resp.data.data);\n      }\n    } catch (err) {\n      console.error(\"Error fetching assignment:\", err);\n    }\n  }, [assignmentId]);\n\n  //  Fetch submission (if có) for this student\n  const fetchSubmission = useCallback(async () => {\n    try {\n      const resp = await axios.get(`/api/student/submissions/assignment/${assignmentId}`);\n      if (resp.data.success) {\n        // Lọc ra submission đúng studentId\n        const allSubs = resp.data.data;\n        const mySub = allSubs.find(s => s.studentId.toString() === studentId);\n        if (mySub) {\n          setSubmission(mySub);\n          setHasSubmitted(true);\n          // Nếu quiz:\n          if ((assignment === null || assignment === void 0 ? void 0 : assignment.type) === \"quiz\" && mySub.answers) {\n            const ansMap = {};\n            mySub.answers.forEach(ans => {\n              ansMap[ans.questionId] = ans.selectedOption;\n            });\n            setAnswers(ansMap);\n          }\n          // Nếu essay:\n          if ((assignment === null || assignment === void 0 ? void 0 : assignment.type) === \"essay\" && mySub.content) {\n            setEssayContent(mySub.content);\n          }\n        }\n      }\n    } catch (err) {\n      console.error(\"Error fetching submission:\", err);\n    }\n  }, [assignmentId, studentId, assignment]);\n\n  // 4. Kiểm tra hạn nộp\n  const checkCanEdit = useCallback(() => {\n    if (!assignment) return;\n    const now = new Date();\n    const due = new Date(assignment.dueDate);\n    // Nếu chưa quá hạn -> có thể nộp hoặc resubmit\n    setCanEdit(now <= due);\n  }, [assignment]);\n\n  // 5. Kết hợp fetch và kiểm tra\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      await fetchAssignment();\n      setIsLoading(false);\n    }\n    loadData();\n  }, [fetchAssignment]);\n  useEffect(() => {\n    if (assignment) {\n      checkCanEdit();\n      fetchSubmission();\n    }\n  }, [assignment, fetchSubmission, checkCanEdit]);\n\n  // 6. Handle chọn đáp án quiz\n  const handleOptionChange = (questionId, optionKey) => {\n    if (!canEdit) return;\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: optionKey\n    }));\n  };\n\n  // 7. Handle submit/resubmit\n  const handleSubmit = async () => {\n    if (!assignment) return;\n\n    // Kiểm tra deadline một lần nữa\n    const now = new Date();\n    const due = new Date(assignment.dueDate);\n    if (now > due) {\n      alert(\"Deadline has passed. Cannot submit.\");\n      return;\n    }\n\n    // Chuẩn bị payload\n    let payload = {\n      studentId,\n      assignmentId\n    };\n    if (assignment.type === \"quiz\") {\n      // Chuyển answers thành mảng\n      const ansArr = Object.entries(answers).map(([qId, sel]) => ({\n        questionId: qId,\n        selectedOption: sel\n      }));\n      payload.answers = ansArr;\n    } else {\n      // essay\n      payload.content = essayContent;\n    }\n    try {\n      await axios.post(\"/api/student/submissions/submit\", payload);\n      alert(\"Submission successful!\");\n      // Refresh lại submission\n      fetchSubmission();\n    } catch (err) {\n      console.error(\"Submit error:\", err);\n      alert(\"Failed to submit.\");\n    }\n  };\n  if (isLoading || !assignment) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5 text-center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-4\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      className: \"mb-4\",\n      onClick: () => navigate(-1),\n      children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), \" Back to Assignments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      bg: \"info\",\n      text: \"dark\",\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: assignment.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Due: \", new Date(assignment.dueDate).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), assignment.type === 'quiz' ? assignment.questions.map((q, idx) => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          children: `Q${idx + 1}: ${q.text}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-2\",\n          children: q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            className: \"mb-2\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              name: `q_${q.questionId}`,\n              id: `${q.questionId}_${opt.key}`,\n              label: `${opt.key}. ${opt.text}`,\n              checked: answers[q.questionId] === opt.key,\n              onChange: () => handleOption(q.questionId, opt.key),\n              disabled: !canEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this)\n          }, opt.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this)\n    }, q.questionId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Your Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 5,\n        value: essayContent,\n        onChange: e => setEssayContent(e.target.value),\n        disabled: !canEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), (submission === null || submission === void 0 ? void 0 : (_submission$grade = submission.grade) === null || _submission$grade === void 0 ? void 0 : _submission$grade.score) != null && /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-success\",\n      children: [\"Score: \", submission.grade.score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), canEdit ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: hasSubmitted ? 'Resubmit' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: \"Deadline has passed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizList, \"TB2LyC+EQqIeL1cAr1/eedWRXWA=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = QuizList;\nvar _c;\n$RefreshReg$(_c, \"QuizList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useParams","axios","motion","FiArrowLeft","Container","Card","Button","Spinner","Form","Row","Col","jsxDEV","_jsxDEV","QuizList","_s","_submission$grade","navigate","assignmentId","assignment","setAssignment","submission","setSubmission","isLoading","setIsLoading","answers","setAnswers","essayContent","setEssayContent","canEdit","setCanEdit","hasSubmitted","setHasSubmitted","DEFAULT_STUDENT_ID","studentId","setStudentId","stored","localStorage","getItem","u","JSON","parse","_id","e","console","warn","fetchAssignment","resp","get","data","success","err","error","fetchSubmission","allSubs","mySub","find","s","toString","type","ansMap","forEach","ans","questionId","selectedOption","content","checkCanEdit","now","Date","due","dueDate","loadData","handleOptionChange","optionKey","prev","handleSubmit","alert","payload","ansArr","Object","entries","map","qId","sel","post","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","bg","text","Body","Title","title","Text","toLocaleString","questions","q","idx","Subtitle","options","opt","i","md","Check","name","id","key","label","checked","onChange","handleOption","disabled","Group","Label","Control","as","rows","value","target","grade","score","_c","$RefreshReg$"],"sources":["C:/Users/thang/Code_WDP301/Learning-Management-System/frontend/src/components/Student/QuizList.jsx"],"sourcesContent":["// src/components/QuizList.jsx\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { motion } from \"framer-motion\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Button,\r\n  Spinner,\r\n  Form,\r\n  Row,\r\n  Col,\r\n} from 'react-bootstrap';\r\nexport default function QuizList() {\r\n  const navigate = useNavigate();\r\n  const { assignmentId } = useParams(); // Route: /student/quiz/:assignmentId\r\n\r\n  // 1. State\r\n  const [assignment, setAssignment] = useState(null);\r\n  const [submission, setSubmission] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [answers, setAnswers] = useState({}); // { questionId: selectedOption }\r\n  const [essayContent, setEssayContent] = useState(\"\");\r\n  const [canEdit, setCanEdit] = useState(false); // còn hạn nộp\r\n  const [hasSubmitted, setHasSubmitted] = useState(false);\r\n\r\n  // Lấy studentId từ localStorage hoặc mặc định\r\n  const DEFAULT_STUDENT_ID = \"60a000000000000000000002\";\r\n  const [studentId, setStudentId] = useState(DEFAULT_STUDENT_ID);\r\n  useEffect(() => {\r\n    try {\r\n      const stored = localStorage.getItem(\"user\");\r\n      if (stored) {\r\n        const u = JSON.parse(stored);\r\n        if (u && u._id) setStudentId(u._id);\r\n      }\r\n    } catch (e) {\r\n      console.warn(\"localStorage user parse error:\", e);\r\n    }\r\n  }, []);\r\n\r\n  //  Fetch assignment detail\r\n  const fetchAssignment = useCallback(async () => {\r\n    try {\r\n      const resp = await axios.get(`/api/student/assignments/${assignmentId}`);\r\n      if (resp.data.success) {\r\n        setAssignment(resp.data.data);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching assignment:\", err);\r\n    }\r\n  }, [assignmentId]);\r\n\r\n  //  Fetch submission (if có) for this student\r\n  const fetchSubmission = useCallback(async () => {\r\n    try {\r\n      const resp = await axios.get(\r\n        `/api/student/submissions/assignment/${assignmentId}`\r\n      );\r\n      if (resp.data.success) {\r\n        // Lọc ra submission đúng studentId\r\n        const allSubs = resp.data.data;\r\n        const mySub = allSubs.find(\r\n          (s) => s.studentId.toString() === studentId\r\n        );\r\n        if (mySub) {\r\n          setSubmission(mySub);\r\n          setHasSubmitted(true);\r\n          // Nếu quiz:\r\n          if (assignment?.type === \"quiz\" && mySub.answers) {\r\n            const ansMap = {};\r\n            mySub.answers.forEach((ans) => {\r\n              ansMap[ans.questionId] = ans.selectedOption;\r\n            });\r\n            setAnswers(ansMap);\r\n          }\r\n          // Nếu essay:\r\n          if (assignment?.type === \"essay\" && mySub.content) {\r\n            setEssayContent(mySub.content);\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching submission:\", err);\r\n    }\r\n  }, [assignmentId, studentId, assignment]);\r\n\r\n  // 4. Kiểm tra hạn nộp\r\n  const checkCanEdit = useCallback(() => {\r\n    if (!assignment) return;\r\n    const now = new Date();\r\n    const due = new Date(assignment.dueDate);\r\n    // Nếu chưa quá hạn -> có thể nộp hoặc resubmit\r\n    setCanEdit(now <= due);\r\n  }, [assignment]);\r\n\r\n  // 5. Kết hợp fetch và kiểm tra\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      setIsLoading(true);\r\n      await fetchAssignment();\r\n      setIsLoading(false);\r\n    }\r\n    loadData();\r\n  }, [fetchAssignment]);\r\n\r\n  useEffect(() => {\r\n    if (assignment) {\r\n      checkCanEdit();\r\n      fetchSubmission();\r\n    }\r\n  }, [assignment, fetchSubmission, checkCanEdit]);\r\n\r\n  // 6. Handle chọn đáp án quiz\r\n  const handleOptionChange = (questionId, optionKey) => {\r\n    if (!canEdit) return;\r\n    setAnswers((prev) => ({\r\n      ...prev,\r\n      [questionId]: optionKey,\r\n    }));\r\n  };\r\n\r\n  // 7. Handle submit/resubmit\r\n  const handleSubmit = async () => {\r\n    if (!assignment) return;\r\n\r\n    // Kiểm tra deadline một lần nữa\r\n    const now = new Date();\r\n    const due = new Date(assignment.dueDate);\r\n    if (now > due) {\r\n      alert(\"Deadline has passed. Cannot submit.\");\r\n      return;\r\n    }\r\n\r\n    // Chuẩn bị payload\r\n    let payload = {\r\n      studentId,\r\n      assignmentId,\r\n    };\r\n    if (assignment.type === \"quiz\") {\r\n      // Chuyển answers thành mảng\r\n      const ansArr = Object.entries(answers).map(([qId, sel]) => ({\r\n        questionId: qId,\r\n        selectedOption: sel,\r\n      }));\r\n      payload.answers = ansArr;\r\n    } else {\r\n      // essay\r\n      payload.content = essayContent;\r\n    }\r\n\r\n    try {\r\n      await axios.post(\"/api/student/submissions/submit\", payload);\r\n      alert(\"Submission successful!\");\r\n      // Refresh lại submission\r\n      fetchSubmission();\r\n    } catch (err) {\r\n      console.error(\"Submit error:\", err);\r\n      alert(\"Failed to submit.\");\r\n    }\r\n  };\r\n\r\n   if (isLoading || !assignment) {\r\n    return (\r\n      <Container className=\"py-5 text-center\">\r\n        <Spinner animation=\"border\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      {/* Back */}\r\n      <Button\r\n        variant=\"success\"\r\n        className=\"mb-4\"\r\n        onClick={() => navigate(-1)}\r\n      >\r\n        <FiArrowLeft /> Back to Assignments\r\n      </Button>\r\n\r\n      {/* Header */}\r\n      <Card bg=\"info\" text=\"dark\" className=\"mb-4\">\r\n        <Card.Body>\r\n          <Card.Title>{assignment.title}</Card.Title>\r\n          <Card.Text>\r\n            Due: {new Date(assignment.dueDate).toLocaleString()}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Content */}\r\n      {assignment.type === 'quiz' ? (\r\n        assignment.questions.map((q, idx) => (\r\n          <Card className=\"mb-3\" key={q.questionId}>\r\n            <Card.Body>\r\n              <Card.Subtitle>{`Q${idx + 1}: ${q.text}`}</Card.Subtitle>\r\n              <Row className=\"mt-2\">\r\n                {q.options.map((opt, i) => (\r\n                  <Col md={6} key={opt.key} className=\"mb-2\">\r\n                    <Form.Check\r\n                      type=\"radio\"\r\n                      name={`q_${q.questionId}`}\r\n                      id={`${q.questionId}_${opt.key}`}\r\n                      label={`${opt.key}. ${opt.text}`}\r\n                      checked={answers[q.questionId] === opt.key}\r\n                      onChange={() => handleOption(q.questionId, opt.key)}\r\n                      disabled={!canEdit}\r\n                    />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        ))\r\n      ) : (\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Your Answer</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={5}\r\n            value={essayContent}\r\n            onChange={(e) => setEssayContent(e.target.value)}\r\n            disabled={!canEdit}\r\n          />\r\n        </Form.Group>\r\n      )}\r\n\r\n      {/* Score */}\r\n      {submission?.grade?.score != null && (\r\n        <h5 className=\"text-success\">Score: {submission.grade.score}</h5>\r\n      )}\r\n\r\n      {/* Submit */}\r\n      {canEdit ? (\r\n        <Button onClick={handleSubmit}>\r\n          {hasSubmitted ? 'Resubmit' : 'Submit'}\r\n        </Button>\r\n      ) : (\r\n        <p className=\"text-danger\">Deadline has passed</p>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}